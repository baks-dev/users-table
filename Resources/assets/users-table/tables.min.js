form=document.forms.users_table_form;users_table_form_category=document.getElementById("users_table_form_category");updateForm=async(key,value)=>{const data=new FormData(form);const url=form.getAttribute("action");const method=form.getAttribute("method");let requestBody=[];requestBody.push(key+"="+value);requestBody=requestBody.join("&");const req=await fetch(url,{method:method,body:requestBody,headers:{"Content-Type":"application/x-www-form-urlencoded","X-Requested-With":"XMLHttpRequest",charset:"utf-8"}});const text=await req.text();return text};parseTextToHtml=text=>{const parser=new DOMParser;const html=parser.parseFromString(text,"text/html");return html};changeCategory=async e=>{const updateFormResponse=await updateForm(e.target.getAttribute("name"),e.target.value);const html=parseTextToHtml(updateFormResponse);let select2=document.getElementById("users_table_form_action_select2");if(select2){select2.remove()}const new_users_table_form_action=html.getElementById("users_table_form_action");document.getElementById("users_table_form_action").replaceWith(new_users_table_form_action);const new_users_table_form_working=html.getElementById("users_table_form_working");document.getElementById("users_table_form_working").replaceWith(new_users_table_form_working);const users_table_form_action=document.getElementById("users_table_form_action");users_table_form_action.addEventListener("change",(e=>changeActions(e)))};changeActions=async e=>{const updateFormResponse=await updateForm(e.target.getAttribute("name"),e.target.value);const html=parseTextToHtml(updateFormResponse);let select2=document.getElementById("users_table_form_working_select2");if(select2){select2.remove()}const new_users_table_form_working=html.getElementById("users_table_form_working");document.getElementById("users_table_form_working").replaceWith(new_users_table_form_working)};users_table_form_category.addEventListener("change",(e=>changeCategory(e)));